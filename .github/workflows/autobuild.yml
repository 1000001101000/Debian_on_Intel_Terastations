name: Generate new images if needed

#on: #[push]
#  schedule: 
#    - cron: "*/20 * * * *"
on:
  push:
    paths: 
      - '.rebuild'
  schedule: 
      - cron: "*/20 * * * *"
      
jobs:
  build:
    runs-on: ubuntu-latest
    container: 'debian:10'
    env:
      repo_dir: .
      build_needed: no
    steps: 
    - name: update apt
      run: apt-get update
    
    - name: install curl
      run: apt-get -y install curl
    
    ##check for build flag, 
    - name: check for the build needed flag
      run: echo "build_needed=$(curl -sL https://github.com/1000001101000/Debian_on_Intel_Terastations/raw/master/.rebuild 2>/dev/null)" >> $GITHUB_ENV 
    
    - name: ensure build packages are installed
      if: env.build_needed == 'yes'
      run: apt-get -y install gzip rsync wget cpio mtools git syslinux xz-utils
    
    - name: if needed, clone the repo for build
      if: env.build_needed == 'yes'
      run: git clone https://github.com/${{github.repository}}; echo "repo_dir=$(ls -rt | tail -n 1)" >> $GITHUB_ENV
    
    - name: set git user name
      if: env.build_needed == 'yes'
      run: git config user.name "workflow@github"; git config user.email "workflow@github"
      working-directory: "${{env.repo_dir}}"
    
    - name: build bookworm installer
      if: env.build_needed == 'yes'
      run: cd installer-image/Bookworm/build/; ./generate_images.sh
      working-directory: "${{env.repo_dir}}"
    
    - name: copy bookworm image to repo
      if: env.build_needed == 'yes'
      run: cp installer-image/Bookworm/build/output/*.img installer-image/Bookworm/
      working-directory: "${{env.repo_dir}}"
      
    - name: update bookworm base installer hash
      if: env.build_needed == 'yes'
      run: cat installer-image/Bookworm/build/debian-files/initrd.gz | md5sum > installer-image/Bookworm/build/last_build.txt
      working-directory: "${{env.repo_dir}}"
      
    - name: build buster installer
      if: env.build_needed == 'yes'
      run: cd installer-image/Buster/build/; ./generate_images.sh
      working-directory: "${{env.repo_dir}}"
      
    - name: copy buster image to repo
      if: env.build_needed == 'yes'
      run: cp installer-image/Buster/build/output/*.img installer-image/Buster/
      working-directory: "${{env.repo_dir}}"
      
    - name: update buster base installer hash
      if: env.build_needed == 'yes'
      run: cat installer-image/Buster/build/debian-files/initrd.gz | md5sum > installer-image/Buster/build/last_build.txt
      working-directory: "${{env.repo_dir}}"
      
    - name: build Bullseye installer
      if: env.build_needed == 'yes'
      run: cd installer-image/Bullseye/build/; ./generate_images.sh
      working-directory: "${{env.repo_dir}}"
      
    - name: copy Bullseye image to repo
      if: env.build_needed == 'yes'
      run: cp installer-image/Bullseye/build/output/*.img installer-image/Bullseye/
      working-directory: "${{env.repo_dir}}"
      
    - name: update bullseye base installer hash
      if: env.build_needed == 'yes'
      run: cat installer-image/Bullseye/build/debian-files/initrd.gz | md5sum > installer-image/Bullseye/build/last_build.txt
      working-directory: "${{env.repo_dir}}"
    
    - name: clear rebuild needed flag 
      if: env.build_needed == 'yes'
      run: echo no > .rebuild
      working-directory: "${{env.repo_dir}}"
      
    - name: if needed, commit
      if: env.build_needed == 'yes'
      run: git commit -v -a -m "update installer images"
      working-directory: "${{env.repo_dir}}"
  
    - name: commit new images
      if: env.build_needed == 'yes'
      run: git push https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:master
      working-directory: "${{env.repo_dir}}"
